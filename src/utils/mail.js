const nodemailer = require("nodemailer");

const transporter = nodemailer.createTransport({
    service: "Gmail",
    auth: {
        user: process.env.EMAIL_USER,
        pass: process.env.EMAIL_PASS,
    },
});

/**
 * Sends a verification email to the provided address with a verification code.
 * @param {string} email - The recipient's email address.
 * @param {string} code - The verification code.
 */
const sendVerificationEmail = async (email, code) => {
    const mailOptions = {
        from: `"FixHub" <${process.env.EMAIL_USER}>`,
        to: email,
        subject: 'X√°c th·ª±c email c·ªßa b·∫°n | FixTech',
        html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                <h2 style="color: #333;">Xin ch√†o!</h2>
                <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω t√†i kho·∫£n t·∫°i FixTech. ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng s·ª≠ d·ª•ng m√£ x√°c th·ª±c sau:</p>
                <div style="background-color: #f8f9fa; padding: 15px; border-radius: 5px; margin: 20px 0; text-align: center;">
                    <h1 style="color: #007bff; margin: 0; letter-spacing: 5px;">${code}</h1>
                </div>
                <p><strong>L∆∞u √Ω:</strong> M√£ x√°c th·ª±c n√†y s·∫Ω h·∫øt h·∫°n sau 5 ph√∫t.</p>
                <p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, vui l√≤ng b·ªè qua email n√†y ho·∫∑c li√™n h·ªá v·ªõi ch√∫ng t√¥i n·∫øu b·∫°n c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o.</p>
                <hr style="border: 1px solid #eee; margin: 20px 0;">
                <p style="color: #666; font-size: 12px;">Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng FixTech. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>
                <p style="color: #666; font-size: 12px;">¬© 2024 FixTech. T·∫•t c·∫£ c√°c quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
            </div>
        `
    };

    try {
        await transporter.sendMail(mailOptions);
    } catch (error) {
        throw new Error('Kh√¥ng th·ªÉ g·ª≠i email x√°c th·ª±c');
    }
};

const sendPasswordResetEmail = async (email, resetToken) => {
    const resetLink = `${process.env.FRONT_END_URL}/reset-password?token=${resetToken}`;
    
    const mailOptions = {
        from: `"FixHub" <${process.env.EMAIL_USER}>`,
        to: email,
        subject: 'Y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u | FixTech',
        html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                <h2 style="color: #333;">Xin ch√†o!</h2>
                <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n c·ªßa b·∫°n t·∫°i FixTech.</p>
                <p>ƒê·ªÉ ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng nh·∫•n v√†o n√∫t b√™n d∆∞·ªõi:</p>
                
                <div style="text-align: center; margin: 30px 0;">
                    <a href="${resetLink}" 
                       style="background-color: #007bff; 
                              color: white; 
                              padding: 12px 25px; 
                              text-decoration: none; 
                              border-radius: 5px;
                              display: inline-block;
                              font-weight: bold;">
                        ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
                    </a>
                </div>
                
                <p><strong>L∆∞u √Ω:</strong></p>
                <ul style="color: #666;">
                    <li>Link ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u n√†y s·∫Ω h·∫øt h·∫°n sau 5 ph√∫t</li>
                    <li>N·∫øu n√∫t kh√¥ng ho·∫°t ƒë·ªông, b·∫°n c√≥ th·ªÉ copy v√† d√°n ƒë∆∞·ªùng link sau v√†o tr√¨nh duy·ªát:</li>
                </ul>
                
                <p style="background-color: #f8f9fa; 
                          padding: 15px; 
                          border-radius: 5px; 
                          word-break: break-all;
                          font-size: 14px;
                          color: #666;">
                    ${resetLink}
                </p>

                <p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, vui l√≤ng b·ªè qua email n√†y v√† ƒë·∫£m b·∫£o r·∫±ng b·∫°n v·∫´n c√≥ th·ªÉ ƒëƒÉng nh·∫≠p v√†o t√†i kho·∫£n c·ªßa m√¨nh.</p>
                
                <p>N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£ th√™m, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>

                <hr style="border: 1px solid #eee; margin: 20px 0;">
                
                <div style="color: #666; font-size: 12px;">
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng FixTech. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>
                    <p>V√¨ l√Ω do b·∫£o m·∫≠t, vui l√≤ng kh√¥ng chia s·∫ª email n√†y v·ªõi b·∫•t k·ª≥ ai.</p>
                    <p>¬© 2024 FixTech. T·∫•t c·∫£ c√°c quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                </div>
            </div>
        `
    };

    try {
        await transporter.sendMail(mailOptions);
    } catch (error) {
        throw new Error('Kh√¥ng th·ªÉ g·ª≠i email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u');
    }
};

/**
 * Sends a deactivation verification email to the provided address with a verification code.
 * @param {string} email - The recipient's email address.
 * @param {string} code - The verification code.
 * @param {string} subject - The email subject (optional).
 */
const sendDeactivateVerificationEmail = async (email, code, subject = 'X√°c th·ª±c v√¥ hi·ªáu h√≥a t√†i kho·∫£n | FixTech') => {
    const mailOptions = {
        from: `"FixHub" <${process.env.EMAIL_USER}>`,
        to: email,
        subject: subject,
        html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                <h2 style="color: #333;">Xin ch√†o!</h2>
                <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu v√¥ hi·ªáu h√≥a t√†i kho·∫£n c·ªßa b·∫°n t·∫°i FixTech.</p>
                <p>ƒê·ªÉ x√°c nh·∫≠n vi·ªác v√¥ hi·ªáu h√≥a t√†i kho·∫£n, vui l√≤ng s·ª≠ d·ª•ng m√£ x√°c th·ª±c sau:</p>
                
                <div style="background-color: #fff3cd; 
                          border: 1px solid #ffeaa7; 
                          padding: 20px; 
                          border-radius: 8px; 
                          margin: 25px 0; 
                          text-align: center;">
                    <h1 style="color: #856404; 
                               margin: 0; 
                               letter-spacing: 8px; 
                               font-size: 32px; 
                               font-weight: bold;">${code}</h1>
                </div>
                
                <div style="background-color: #f8f9fa; 
                          border-left: 4px solid #dc3545; 
                          padding: 15px; 
                          margin: 20px 0;">
                    <p style="margin: 0; color: #721c24;">
                        <strong>‚ö†Ô∏è C·∫£nh b√°o:</strong> Vi·ªác v√¥ hi·ªáu h√≥a t√†i kho·∫£n s·∫Ω t·∫°m th·ªùi kh√≥a t√†i kho·∫£n c·ªßa b·∫°n. 
                        B·∫°n c√≥ th·ªÉ k√≠ch ho·∫°t l·∫°i b·∫•t c·ª© l√∫c n√†o b·∫±ng c√°ch ƒëƒÉng nh·∫≠p.
                    </p>
                </div>
                
                <p><strong>L∆∞u √Ω quan tr·ªçng:</strong></p>
                <ul style="color: #666;">
                    <li>M√£ x√°c th·ª±c n√†y s·∫Ω h·∫øt h·∫°n sau 5 ph√∫t</li>
                    <li>Ch·ªâ s·ª≠ d·ª•ng m√£ n√†y n·∫øu b·∫°n th·ª±c s·ª± mu·ªën v√¥ hi·ªáu h√≥a t√†i kho·∫£n</li>
                    <li>T√†i kho·∫£n v√¥ hi·ªáu h√≥a v·∫´n c√≥ th·ªÉ ƒë∆∞·ª£c k√≠ch ho·∫°t l·∫°i</li>
                </ul>
                
                <p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, vui l√≤ng b·ªè qua email n√†y v√† ƒë·∫£m b·∫£o r·∫±ng t√†i kho·∫£n c·ªßa b·∫°n v·∫´n an to√†n.</p>
                
                <p>N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£ ho·∫∑c c√≥ th·∫Øc m·∫Øc, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>

                <hr style="border: 1px solid #eee; margin: 20px 0;">
                
                <div style="color: #666; font-size: 12px;">
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng FixTech. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>
                    <p>V√¨ l√Ω do b·∫£o m·∫≠t, vui l√≤ng kh√¥ng chia s·∫ª m√£ x√°c th·ª±c n√†y v·ªõi b·∫•t k·ª≥ ai.</p>
                    <p>¬© 2024 FixTech. T·∫•t c·∫£ c√°c quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                </div>
            </div>
        `
    };

    try {
        await transporter.sendMail(mailOptions);
    } catch (error) {
        throw new Error('Kh√¥ng th·ªÉ g·ª≠i email x√°c th·ª±c v√¥ hi·ªáu h√≥a t√†i kho·∫£n');
    }
};

/**
 * Sends a delete account verification email to the provided address with a verification code.
 * @param {string} email - The recipient's email address.
 * @param {string} code - The verification code.
 * @param {string} subject - The email subject (optional).
 */
const sendDeleteVerificationEmail = async (email, code, subject = 'X√°c th·ª±c x√≥a t√†i kho·∫£n | FixTech') => {
    const mailOptions = {
        from: `"FixHub" <${process.env.EMAIL_USER}>`,
        to: email,
        subject: subject,
        html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                <h2 style="color: #333;">Xin ch√†o!</h2>
                <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu <strong>X√ìA Vƒ®NH VI·ªÑN</strong> t√†i kho·∫£n c·ªßa b·∫°n t·∫°i FixTech.</p>
                
                <div style="background-color: #f8d7da; 
                          border: 1px solid #f5c6cb; 
                          padding: 20px; 
                          border-radius: 8px; 
                          margin: 25px 0;">
                    <h3 style="color: #721c24; margin: 0 0 15px 0;">üö® C·∫¢NH B√ÅO QUAN TR·ªåNG</h3>
                    <p style="color: #721c24; margin: 0;">
                        <strong>Vi·ªác x√≥a t√†i kho·∫£n l√† KH√îNG TH·ªÇ HO√ÄN T√ÅC!</strong><br>
                        T·∫•t c·∫£ d·ªØ li·ªáu c·ªßa b·∫°n s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn v√† kh√¥ng th·ªÉ kh√¥i ph·ª•c.
                    </p>
                </div>
                
                <p>ƒê·ªÉ x√°c nh·∫≠n vi·ªác x√≥a t√†i kho·∫£n, vui l√≤ng s·ª≠ d·ª•ng m√£ x√°c th·ª±c sau:</p>
                
                <div style="background-color: #dc3545; 
                          color: white;
                          padding: 25px; 
                          border-radius: 8px; 
                          margin: 25px 0; 
                          text-align: center;">
                    <h1 style="color: white; 
                               margin: 0; 
                               letter-spacing: 8px; 
                               font-size: 32px; 
                               font-weight: bold;">${code}</h1>
                </div>
                
                <div style="background-color: #fff3cd; 
                          border: 1px solid #ffeaa7; 
                          padding: 15px; 
                          margin: 20px 0;">
                    <p style="margin: 0; color: #856404;">
                        <strong>üìã D·ªØ li·ªáu s·∫Ω b·ªã x√≥a:</strong>
                    </p>
                    <ul style="color: #856404; margin: 10px 0 0 20px;">
                        <li>Th√¥ng tin c√° nh√¢n</li>
                        <li>L·ªãch s·ª≠ ƒë·∫∑t d·ªãch v·ª•</li>
                        <li>ƒê√°nh gi√° v√† ph·∫£n h·ªìi</li>
                        <li>T·∫•t c·∫£ d·ªØ li·ªáu li√™n quan kh√°c</li>
                    </ul>
                </div>
                
                <p><strong>L∆∞u √Ω quan tr·ªçng:</strong></p>
                <ul style="color: #666;">
                    <li>M√£ x√°c th·ª±c n√†y s·∫Ω h·∫øt h·∫°n sau 5 ph√∫t</li>
                    <li>Ch·ªâ s·ª≠ d·ª•ng m√£ n√†y n·∫øu b·∫°n th·ª±c s·ª± mu·ªën x√≥a vƒ©nh vi·ªÖn t√†i kho·∫£n</li>
                    <li>Vi·ªác x√≥a t√†i kho·∫£n l√† KH√îNG TH·ªÇ HO√ÄN T√ÅC</li>
                    <li>N·∫øu b·∫°n ch·ªâ mu·ªën t·∫°m th·ªùi kh√≥a t√†i kho·∫£n, h√£y s·ª≠ d·ª•ng t√≠nh nƒÉng "V√¥ hi·ªáu h√≥a t√†i kho·∫£n" thay th·∫ø</li>
                </ul>
                
                <p>N·∫øu b·∫°n kh√¥ng th·ª±c hi·ªán y√™u c·∫ßu n√†y, vui l√≤ng b·ªè qua email n√†y v√† ƒë·∫£m b·∫£o r·∫±ng t√†i kho·∫£n c·ªßa b·∫°n v·∫´n an to√†n.</p>
                
                <p>N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£ ho·∫∑c c√≥ th·∫Øc m·∫Øc, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>

                <hr style="border: 1px solid #eee; margin: 20px 0;">
                
                <div style="color: #666; font-size: 12px;">
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng FixTech. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>
                    <p>V√¨ l√Ω do b·∫£o m·∫≠t, vui l√≤ng kh√¥ng chia s·∫ª m√£ x√°c th·ª±c n√†y v·ªõi b·∫•t k·ª≥ ai.</p>
                    <p>¬© 2024 FixTech. T·∫•t c·∫£ c√°c quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                </div>
            </div>
        `
    };

    try {
        await transporter.sendMail(mailOptions);
    } catch (error) {
        throw new Error('Kh√¥ng th·ªÉ g·ª≠i email x√°c th·ª±c x√≥a t√†i kho·∫£n');
    }
};

/**
 * Sends a deletion reminder email to the user about their pending account deletion.
 * @param {string} email - The recipient's email address.
 * @param {number} daysLeft - Number of days left before permanent deletion.
 * @param {string} subject - The email subject (optional).
 */
const sendDeletionReminderEmail = async (email, daysLeft, subject = 'Nh·∫Øc nh·ªü: T√†i kho·∫£n s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn | FixTech') => {
    const mailOptions = {
        from: `"FixHub" <${process.env.EMAIL_USER}>`,
        to: email,
        subject: subject,
        html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
                <h2 style="color: #333;">Xin ch√†o!</h2>
                <p>T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ƒë√°nh d·∫•u ƒë·ªÉ x√≥a vƒ©nh vi·ªÖn.</p>
                
                <div style="background-color: #f8d7da; 
                          border: 1px solid #f5c6cb; 
                          padding: 20px; 
                          border-radius: 8px; 
                          margin: 25px 0;">
                    <h3 style="color: #721c24; margin: 0 0 15px 0;">‚è∞ TH·ªúI GIAN C√íN L·∫†I</h3>
                    <p style="color: #721c24; margin: 0; font-size: 1.2rem; font-weight: bold;">
                        C√≤n ${daysLeft} ng√†y tr∆∞·ªõc khi t√†i kho·∫£n b·ªã x√≥a vƒ©nh vi·ªÖn
                    </p>
                </div>
                
                <div style="background-color: #d1ecf1; 
                          border: 1px solid #bee5eb; 
                          padding: 15px; 
                          border-radius: 8px; 
                          margin: 20px 0;">
                    <h4 style="color: #0c5460; margin: 0 0 10px 0;">üîÑ C√°ch kh√¥i ph·ª•c t√†i kho·∫£n:</h4>
                    <p style="color: #0c5460; margin: 0;">
                        Ch·ªâ c·∫ßn <strong>ƒëƒÉng nh·∫≠p l·∫°i</strong> v√†o t√†i kho·∫£n trong th·ªùi gian n√†y, 
                        vi·ªác x√≥a t√†i kho·∫£n s·∫Ω ƒë∆∞·ª£c h·ªßy b·ªè t·ª± ƒë·ªông.
                    </p>
                </div>
                
                <div style="background-color: #fff3cd; 
                          border: 1px solid #ffeaa7; 
                          padding: 15px; 
                          margin: 20px 0;">
                    <p style="margin: 0; color: #856404;">
                        <strong>üìã D·ªØ li·ªáu s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn:</strong>
                    </p>
                    <ul style="color: #856404; margin: 10px 0 0 20px;">
                        <li>Th√¥ng tin c√° nh√¢n</li>
                        <li>L·ªãch s·ª≠ ƒë·∫∑t d·ªãch v·ª•</li>
                        <li>ƒê√°nh gi√° v√† ph·∫£n h·ªìi</li>
                        <li>T·∫•t c·∫£ d·ªØ li·ªáu li√™n quan kh√°c</li>
                    </ul>
                </div>
                
                <p><strong>L∆∞u √Ω quan tr·ªçng:</strong></p>
                <ul style="color: #666;">
                    <li>Sau ${daysLeft} ng√†y, t√†i kho·∫£n s·∫Ω b·ªã x√≥a vƒ©nh vi·ªÖn v√† kh√¥ng th·ªÉ kh√¥i ph·ª•c</li>
                    <li>Ch·ªâ c·∫ßn ƒëƒÉng nh·∫≠p l·∫°i ƒë·ªÉ h·ªßy b·ªè vi·ªác x√≥a t√†i kho·∫£n</li>
                    <li>N·∫øu b·∫°n kh√¥ng mu·ªën x√≥a t√†i kho·∫£n, h√£y ƒëƒÉng nh·∫≠p ngay b√¢y gi·ªù</li>
                </ul>
                
                <p>N·∫øu b·∫°n c·∫ßn h·ªó tr·ª£ ho·∫∑c c√≥ th·∫Øc m·∫Øc, ƒë·ª´ng ng·∫ßn ng·∫°i li√™n h·ªá v·ªõi ch√∫ng t√¥i.</p>

                <hr style="border: 1px solid #eee; margin: 20px 0;">
                
                <div style="color: #666; font-size: 12px;">
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng FixTech. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>
                    <p>¬© 2024 FixTech. T·∫•t c·∫£ c√°c quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                </div>
            </div>
        `
    };

    try {
        await transporter.sendMail(mailOptions);
    } catch (error) {
        throw new Error('Kh√¥ng th·ªÉ g·ª≠i email nh·∫Øc nh·ªü x√≥a t√†i kho·∫£n');
    }
};


const sendWarningEmail = async (email, warningContent, subject = 'C·∫¢NH B√ÅO T√ÄI KHO·∫¢N | FixTech') => {
    const mailOptions = {
        from: `"FixHub" <${process.env.EMAIL_USER}>`,
        to: email,
        subject: subject,
        html: `
            <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; border: 2px solid #dc3545; border-radius: 8px; padding: 20px;">
                <h2 style="color: #dc3545; text-align: center; font-weight: bold;">‚ö†Ô∏è C·∫¢NH B√ÅO T·ª™ FIXTECH ‚ö†Ô∏è</h2>
                <p style="color: #333; font-size: 16px;">Ch√∫ng t√¥i ph√°t hi·ªán h√†nh vi vi ph·∫°m li√™n quan ƒë·∫øn t√†i kho·∫£n c·ªßa b·∫°n t·∫°i FixTech.</p>
                <p style="font-weight: bold; color: #dc3545;">Chi ti·∫øt c·∫£nh b√°o:</p>
                <div style="background-color: #f8d7da; 
                          border: 1px solid #dc3545; 
                          padding: 20px; 
                          border-radius: 8px; 
                          margin: 20px 0; 
                          text-align: center;">
                    <p style="color: #721c24; margin: 0; font-size: 18px; font-weight: bold;">
                        ${warningContent}
                    </p>
                </div>
                
                <div style="background-color: #fff3cd; 
                          border-left: 4px solid #dc3545; 
                          padding: 15px; 
                          margin: 20px 0;">
                    <p style="margin: 0; color: #721c24; font-weight: bold;">
                        üö® <strong>H·∫≠u qu·∫£ n·∫øu ti·∫øp t·ª•c vi ph·∫°m:</strong> T√†i kho·∫£n c·ªßa b·∫°n c√≥ th·ªÉ b·ªã t·∫°m kh√≥a ho·∫∑c v√¥ hi·ªáu h√≥a vƒ©nh vi·ªÖn.
                    </p>
                </div>
                
                <p style="font-weight: bold; color: #333;">H√†nh ƒë·ªông c·∫ßn th·ª±c hi·ªán ngay:</p>
              
                
                <p style="color: #721c24;">N·∫øu b·∫°n tin r·∫±ng ƒë√¢y l√† m·ªôt nh·∫ßm l·∫´n, vui l√≤ng li√™n h·ªá ngay ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£. H√†nh ƒë·ªông k·ªãp th·ªùi s·∫Ω gi√∫p tr√°nh c√°c bi·ªán ph√°p nghi√™m ng·∫∑t h∆°n.</p>
                
                <p style="color: #333;">Tr√¢n tr·ªçng,</p>
                <p style="color: #333; font-weight: bold;">ƒê·ªôi ng≈© FixTech</p>

                <hr style="border: 1px solid #dc3545; margin: 20px 0;">
                
                <div style="color: #666; font-size: 12px; text-align: center;">
                    <p>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông t·ª´ h·ªá th·ªëng FixTech. Vui l√≤ng kh√¥ng tr·∫£ l·ªùi email n√†y.</p>
                    <p>V√¨ l√Ω do b·∫£o m·∫≠t, kh√¥ng chia s·∫ª th√¥ng tin n√†y v·ªõi b·∫•t k·ª≥ ai.</p>
                    <p>¬© 2025 FixTech. T·∫•t c·∫£ c√°c quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.</p>
                </div>
            </div>
        `
    };

    try {
        await transporter.sendMail(mailOptions);
    } catch (error) {
        throw new Error('Kh√¥ng th·ªÉ g·ª≠i email c·∫£nh b√°o t√†i kho·∫£n');
    }
};


module.exports = {
    sendVerificationEmail,
    sendPasswordResetEmail,
    sendDeactivateVerificationEmail,
    sendDeleteVerificationEmail,
    sendDeletionReminderEmail,
    sendWarningEmail
};